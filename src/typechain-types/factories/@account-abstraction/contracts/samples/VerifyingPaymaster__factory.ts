/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../../../../@account-abstraction/contracts/samples/VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterAndData",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161229938038061229983398181016040528101906100329190610376565b8133600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a65760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009d91906103c5565b60405180910390fd5b6100b58161013560201b60201c565b506100c5816101f960201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050610518565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8073ffffffffffffffffffffffffffffffffffffffff166301ffc9a77f915074d8000000000000000000000000000000000000000000000000000000006040518263ffffffff1660e01b8152600401610252919061041b565b602060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610293919061046e565b6102d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c9906104f8565b60405180910390fd5b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610305826102da565b9050919050565b6000610317826102fa565b9050919050565b6103278161030c565b811461033257600080fd5b50565b6000815190506103448161031e565b92915050565b610353816102fa565b811461035e57600080fd5b50565b6000815190506103708161034a565b92915050565b6000806040838503121561038d5761038c6102d5565b5b600061039b85828601610335565b92505060206103ac85828601610361565b9150509250929050565b6103bf816102fa565b82525050565b60006020820190506103da60008301846103b6565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610415816103e0565b82525050565b6000602082019050610430600083018461040c565b92915050565b60008115159050919050565b61044b81610436565b811461045657600080fd5b50565b60008151905061046881610442565b92915050565b600060208284031215610484576104836102d5565b5b600061049284828501610459565b91505092915050565b600082825260208201905092915050565b7f49456e747279506f696e7420696e74657266616365206d69736d617463680000600082015250565b60006104e2601e8361049b565b91506104ed826104ac565b602082019050919050565b60006020820190508181036000830152610511816104d5565b9050919050565b60805160a051611d246105756000396000818161047e0152610b5e015260008181610356015281816103ed01528181610656015281816106820152818161070c0152818161079c0152818161083b01526109d60152611d246000f3fe6080604052600436106100e85760003560e01c80638da5cb5b1161008a578063c23a5cea11610059578063c23a5cea146102c5578063c399ec88146102ee578063d0e30db014610319578063f2fde38b14610323576100e8565b80638da5cb5b1461021857806394d4ad6014610243578063b0d691fe14610283578063bb9fe6bf146102ae576100e8565b806352b7512c116100c657806352b7512c1461015d5780635829c5f51461019b578063715018a6146101d85780637c627b21146101ef576100e8565b80630396cb60146100ed578063205c28781461010957806323d9ac9b14610132575b600080fd5b6101076004803603810190610102919061109e565b61034c565b005b34801561011557600080fd5b50610130600480360381019061012b919061115f565b6103e3565b005b34801561013e57600080fd5b5061014761047c565b60405161015491906111c0565b60405180910390f35b34801561016957600080fd5b50610184600480360381019061017f9190611236565b6104a0565b604051610192929190611344565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd91906113b2565b6104c3565b6040516101cf9190611430565b60405180910390f35b3480156101e457600080fd5b506101ed6105a1565b005b3480156101fb57600080fd5b50610216600480360381019061021191906114d5565b6105b5565b005b34801561022457600080fd5b5061022d6105d1565b60405161023a91906111c0565b60405180910390f35b34801561024f57600080fd5b5061026a6004803603810190610265919061155d565b6105fa565b60405161027a94939291906115f5565b60405180910390f35b34801561028f57600080fd5b50610298610654565b6040516102a59190611694565b60405180910390f35b3480156102ba57600080fd5b506102c3610678565b005b3480156102d157600080fd5b506102ec60048036038101906102e791906116af565b610702565b005b3480156102fa57600080fd5b50610303610798565b60405161031091906116dc565b60405180910390f35b610321610839565b005b34801561032f57600080fd5b5061034a60048036038101906103459190611723565b6108c7565b005b61035461094d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016103ae919061175f565b6000604051808303818588803b1580156103c757600080fd5b505af11580156103db573d6000803e3d6000fd5b505050505050565b6103eb61094d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b8152600401610446929190611789565b600060405180830381600087803b15801561046057600080fd5b505af1158015610474573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060006104ac6109d4565b6104b7858585610a64565b91509150935093915050565b6000806104cf85610bf2565b90508085602001358680604001906104e791906117c1565b6040516104f5929190611854565b604051809103902087806060019061050d91906117c1565b60405161051b929190611854565b60405180910390208860800135898060e0019061053891906117c1565b60149060349261054a93929190611877565b9061055591906118ca565b60001c8a60a001358b60c0013546308d8d6040516020016105819c9b9a99989796959493929190611929565b604051602081830303815290604052805190602001209150509392505050565b6105a961094d565b6105b36000610c02565b565b6105bd6109d4565b6105ca8585858585610cc6565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000803660008585603490809261061393929190611877565b81019061062091906119e3565b80945081955050508585604060346106389190611a52565b90809261064793929190611877565b9150915092959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b61068061094d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106e857600080fd5b505af11580156106fc573d6000803e3d6000fd5b50505050565b61070a61094d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016107639190611a86565b600060405180830381600087803b15801561077d57600080fd5b505af1158015610791573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107f391906111c0565b602060405180830381865afa158015610810573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108349190611ab6565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161089391906111c0565b6000604051808303818588803b1580156108ac57600080fd5b505af11580156108c0573d6000803e3d6000fd5b5050505050565b6108cf61094d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109415760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161093891906111c0565b60405180910390fd5b61094a81610c02565b50565b610955610d01565b73ffffffffffffffffffffffffffffffffffffffff166109736105d1565b73ffffffffffffffffffffffffffffffffffffffff16146109d257610996610d01565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109c991906111c0565b60405180910390fd5b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5990611b40565b60405180910390fd5b565b606060008080366000610a85898060e00190610a8091906117c1565b6105fa565b93509350935093506040828290501480610aa25750604182829050145b610ae1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad890611bd2565b60405180910390fd5b6000610af6610af18b87876104c3565b610d09565b9050610b468184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610d3f565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610bc357610ba460018686610d6b565b6040518060200160405280600081525090965096505050505050610bea565b610bcf60008686610d6b565b60405180602001604052806000815250909650965050505050505b935093915050565b6000808235905080915050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf890611c3e565b60405180910390fd5b600033905090565b60007f19457468657265756d205369676e6564204d6573736167653a0a33320000000060005281601c52603c6000209050919050565b600080600080610d4f8686610da4565b925092509250610d5f8282610e00565b82935050505092915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610d93576000610d96565b60015b60ff16171790509392505050565b60008060006041845103610de95760008060006020870151925060408701519150606087015160001a9050610ddb88828585610f64565b955095509550505050610df9565b60006002855160001b9250925092505b9250925092565b60006003811115610e1457610e13611c5e565b5b826003811115610e2757610e26611c5e565b5b0315610f605760016003811115610e4157610e40611c5e565b5b826003811115610e5457610e53611c5e565b5b03610e8b576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610e9f57610e9e611c5e565b5b826003811115610eb257610eb1611c5e565b5b03610ef7578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401610eee91906116dc565b60405180910390fd5b600380811115610f0a57610f09611c5e565b5b826003811115610f1d57610f1c611c5e565b5b03610f5f57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401610f569190611430565b60405180910390fd5b5b5050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115610fa457600060038592509250925061104e565b600060018888888860405160008152602001604052604051610fc99493929190611ca9565b6020604051602081039080840390855afa158015610feb573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361103f57600060016000801b9350935093505061104e565b8060008060001b935093509350505b9450945094915050565b600080fd5b600080fd5b600063ffffffff82169050919050565b61107b81611062565b811461108657600080fd5b50565b60008135905061109881611072565b92915050565b6000602082840312156110b4576110b3611058565b5b60006110c284828501611089565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110f6826110cb565b9050919050565b611106816110eb565b811461111157600080fd5b50565b600081359050611123816110fd565b92915050565b6000819050919050565b61113c81611129565b811461114757600080fd5b50565b60008135905061115981611133565b92915050565b6000806040838503121561117657611175611058565b5b600061118485828601611114565b92505060206111958582860161114a565b9150509250929050565b60006111aa826110cb565b9050919050565b6111ba8161119f565b82525050565b60006020820190506111d560008301846111b1565b92915050565b600080fd5b600061012082840312156111f7576111f66111db565b5b81905092915050565b6000819050919050565b61121381611200565b811461121e57600080fd5b50565b6000813590506112308161120a565b92915050565b60008060006060848603121561124f5761124e611058565b5b600084013567ffffffffffffffff81111561126d5761126c61105d565b5b611279868287016111e0565b935050602061128a86828701611221565b925050604061129b8682870161114a565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156112df5780820151818401526020810190506112c4565b60008484015250505050565b6000601f19601f8301169050919050565b6000611307826112a5565b61131181856112b0565b93506113218185602086016112c1565b61132a816112eb565b840191505092915050565b61133e81611129565b82525050565b6000604082019050818103600083015261135e81856112fc565b905061136d6020830184611335565b9392505050565b600065ffffffffffff82169050919050565b61138f81611374565b811461139a57600080fd5b50565b6000813590506113ac81611386565b92915050565b6000806000606084860312156113cb576113ca611058565b5b600084013567ffffffffffffffff8111156113e9576113e861105d565b5b6113f5868287016111e0565b93505060206114068682870161139d565b92505060406114178682870161139d565b9150509250925092565b61142a81611200565b82525050565b60006020820190506114456000830184611421565b92915050565b6003811061145857600080fd5b50565b60008135905061146a8161144b565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261149557611494611470565b5b8235905067ffffffffffffffff8111156114b2576114b1611475565b5b6020830191508360018202830111156114ce576114cd61147a565b5b9250929050565b6000806000806000608086880312156114f1576114f0611058565b5b60006114ff8882890161145b565b955050602086013567ffffffffffffffff8111156115205761151f61105d565b5b61152c8882890161147f565b9450945050604061153f8882890161114a565b92505060606115508882890161114a565b9150509295509295909350565b6000806020838503121561157457611573611058565b5b600083013567ffffffffffffffff8111156115925761159161105d565b5b61159e8582860161147f565b92509250509250929050565b6115b381611374565b82525050565b82818337600083830152505050565b60006115d483856112b0565b93506115e18385846115b9565b6115ea836112eb565b840190509392505050565b600060608201905061160a60008301876115aa565b61161760208301866115aa565b818103604083015261162a8184866115c8565b905095945050505050565b6000819050919050565b600061165a611655611650846110cb565b611635565b6110cb565b9050919050565b600061166c8261163f565b9050919050565b600061167e82611661565b9050919050565b61168e81611673565b82525050565b60006020820190506116a96000830184611685565b92915050565b6000602082840312156116c5576116c4611058565b5b60006116d384828501611114565b91505092915050565b60006020820190506116f16000830184611335565b92915050565b6117008161119f565b811461170b57600080fd5b50565b60008135905061171d816116f7565b92915050565b60006020828403121561173957611738611058565b5b60006117478482850161170e565b91505092915050565b61175981611062565b82525050565b60006020820190506117746000830184611750565b92915050565b611783816110eb565b82525050565b600060408201905061179e600083018561177a565b6117ab6020830184611335565b9392505050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126117de576117dd6117b2565b5b80840192508235915067ffffffffffffffff821115611800576117ff6117b7565b5b60208301925060018202360383131561181c5761181b6117bc565b5b509250929050565b600081905092915050565b600061183b8385611824565b93506118488385846115b9565b82840190509392505050565b600061186182848661182f565b91508190509392505050565b600080fd5b600080fd5b6000808585111561188b5761188a61186d565b5b8386111561189c5761189b611872565b5b6001850283019150848603905094509492505050565b600082905092915050565b600082821b905092915050565b60006118d683836118b2565b826118e18135611200565b925060208210156119215761191c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026118bd565b831692505b505092915050565b60006101808201905061193f600083018f6111b1565b61194c602083018e611335565b611959604083018d611421565b611966606083018c611421565b611973608083018b611421565b61198060a083018a611335565b61198d60c0830189611335565b61199a60e0830188611421565b6119a8610100830187611335565b6119b66101208301866111b1565b6119c46101408301856115aa565b6119d26101608301846115aa565b9d9c50505050505050505050505050565b600080604083850312156119fa576119f9611058565b5b6000611a088582860161139d565b9250506020611a198582860161139d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a5d82611129565b9150611a6883611129565b9250828201905080821115611a8057611a7f611a23565b5b92915050565b6000602082019050611a9b600083018461177a565b92915050565b600081519050611ab081611133565b92915050565b600060208284031215611acc57611acb611058565b5b6000611ada84828501611aa1565b91505092915050565b600082825260208201905092915050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b6000611b2a601583611ae3565b9150611b3582611af4565b602082019050919050565b60006020820190508181036000830152611b5981611b1d565b9050919050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b6000611bbc604083611ae3565b9150611bc782611b60565b604082019050919050565b60006020820190508181036000830152611beb81611baf565b9050919050565b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b6000611c28600d83611ae3565b9150611c3382611bf2565b602082019050919050565b60006020820190508181036000830152611c5781611c1b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600060ff82169050919050565b611ca381611c8d565b82525050565b6000608082019050611cbe6000830187611421565b611ccb6020830186611c9a565b611cd86040830185611421565b611ce56060830184611421565b9594505050505056fea26469706673582212209f33889c2541c691abe5648b3664bd1019d89eab4152c849e1749c136fe2116564736f6c634300081c0033";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _entryPoint: AddressLike,
    _verifyingSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    );
  }
  override deploy(
    _entryPoint: AddressLike,
    _verifyingSigner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    ) as Promise<
      VerifyingPaymaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VerifyingPaymaster__factory {
    return super.connect(runner) as VerifyingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VerifyingPaymaster {
    return new Contract(address, _abi, runner) as unknown as VerifyingPaymaster;
  }
}
